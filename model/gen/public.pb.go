// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.3.0
// source: public.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID          string  `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	ScreenWith    int32   `protobuf:"varint,2,opt,name=ScreenWith,proto3" json:"ScreenWith,omitempty"`        //屏幕宽度
	ScreenHight   int32   `protobuf:"varint,3,opt,name=ScreenHight,proto3" json:"ScreenHight,omitempty"`      //屏幕高度
	ScreenDensity float32 `protobuf:"fixed32,4,opt,name=ScreenDensity,proto3" json:"ScreenDensity,omitempty"` //屏幕密度
	IIDFA         string  `protobuf:"bytes,5,opt,name=IIDFA,proto3" json:"IIDFA,omitempty"`                   //广告定位标志
	BundleVer     string  `protobuf:"bytes,6,opt,name=BundleVer,proto3" json:"BundleVer,omitempty"`           //Bundle版本
	PackageName   string  `protobuf:"bytes,7,opt,name=PackageName,proto3" json:"PackageName,omitempty"`       //包名
	Signature     string  `protobuf:"bytes,8,opt,name=Signature,proto3" json:"Signature,omitempty"`           //签名
	OsVersion     string  `protobuf:"bytes,9,opt,name=OsVersion,proto3" json:"OsVersion,omitempty"`           //系统版本
	Factory       string  `protobuf:"bytes,10,opt,name=Factory,proto3" json:"Factory,omitempty"`              //生产厂商
	Name          string  `protobuf:"bytes,11,opt,name=Name,proto3" json:"Name,omitempty"`                    //手机名称
	VersionCode   int32   `protobuf:"varint,12,opt,name=VersionCode,proto3" json:"VersionCode,omitempty"`
	VersionName   string  `protobuf:"bytes,13,opt,name=VersionName,proto3" json:"VersionName,omitempty"`
	BuildCode     string  `protobuf:"bytes,14,opt,name=BuildCode,proto3" json:"BuildCode,omitempty"`
	ChannelId     string  `protobuf:"bytes,15,opt,name=ChannelId,proto3" json:"ChannelId,omitempty"` //渠道id
	CityId        string  `protobuf:"bytes,16,opt,name=CityId,proto3" json:"CityId,omitempty"`
	Longitude     float64 `protobuf:"fixed64,17,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Latitude      float64 `protobuf:"fixed64,18,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	OS            string  `protobuf:"bytes,19,opt,name=OS,proto3" json:"OS,omitempty"`              //apple;android;
	Net           string  `protobuf:"bytes,20,opt,name=Net,proto3" json:"Net,omitempty"`            //网络环境
	ProtoVer      int32   `protobuf:"varint,21,opt,name=ProtoVer,proto3" json:"ProtoVer,omitempty"` // 客户端协议版本,目前填1
	I18N          string  `protobuf:"bytes,22,opt,name=i18n,proto3" json:"i18n,omitempty"`          // 当前系统语言代码;
	DevName       string  `protobuf:"bytes,23,opt,name=DevName,proto3" json:"DevName,omitempty"`    // 用户自定义的设备名, 展示用,Cli-Svr使用 uuid;
	DevType       int32   `protobuf:"varint,24,opt,name=DevType,proto3" json:"DevType,omitempty"`   // 设备类型，即原有的，OS，String
}

func (x *DeviceBase) Reset() {
	*x = DeviceBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceBase) ProtoMessage() {}

func (x *DeviceBase) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceBase.ProtoReflect.Descriptor instead.
func (*DeviceBase) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceBase) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *DeviceBase) GetScreenWith() int32 {
	if x != nil {
		return x.ScreenWith
	}
	return 0
}

func (x *DeviceBase) GetScreenHight() int32 {
	if x != nil {
		return x.ScreenHight
	}
	return 0
}

func (x *DeviceBase) GetScreenDensity() float32 {
	if x != nil {
		return x.ScreenDensity
	}
	return 0
}

func (x *DeviceBase) GetIIDFA() string {
	if x != nil {
		return x.IIDFA
	}
	return ""
}

func (x *DeviceBase) GetBundleVer() string {
	if x != nil {
		return x.BundleVer
	}
	return ""
}

func (x *DeviceBase) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *DeviceBase) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DeviceBase) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *DeviceBase) GetFactory() string {
	if x != nil {
		return x.Factory
	}
	return ""
}

func (x *DeviceBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceBase) GetVersionCode() int32 {
	if x != nil {
		return x.VersionCode
	}
	return 0
}

func (x *DeviceBase) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *DeviceBase) GetBuildCode() string {
	if x != nil {
		return x.BuildCode
	}
	return ""
}

func (x *DeviceBase) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *DeviceBase) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *DeviceBase) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *DeviceBase) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *DeviceBase) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *DeviceBase) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *DeviceBase) GetProtoVer() int32 {
	if x != nil {
		return x.ProtoVer
	}
	return 0
}

func (x *DeviceBase) GetI18N() string {
	if x != nil {
		return x.I18N
	}
	return ""
}

func (x *DeviceBase) GetDevName() string {
	if x != nil {
		return x.DevName
	}
	return ""
}

func (x *DeviceBase) GetDevType() int32 {
	if x != nil {
		return x.DevType
	}
	return 0
}

type DeviceBaseS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devs []*DeviceBase `protobuf:"bytes,1,rep,name=Devs,proto3" json:"Devs,omitempty"`
}

func (x *DeviceBaseS) Reset() {
	*x = DeviceBaseS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceBaseS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceBaseS) ProtoMessage() {}

func (x *DeviceBaseS) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceBaseS.ProtoReflect.Descriptor instead.
func (*DeviceBaseS) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceBaseS) GetDevs() []*DeviceBase {
	if x != nil {
		return x.Devs
	}
	return nil
}

// 请求
type ReqBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dev       *DeviceBase `protobuf:"bytes,1,opt,name=Dev,proto3" json:"Dev,omitempty"`             // 设备信息
	UserId    uint64      `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`      // 用户id
	Cmd       uint32      `protobuf:"varint,3,opt,name=Cmd,proto3" json:"Cmd,omitempty"`            // 命令字
	MsgId     uint64      `protobuf:"varint,4,opt,name=MsgId,proto3" json:"MsgId,omitempty"`        // BussnissId，业务号，客户端发起，原样返回
	SessionId string      `protobuf:"bytes,5,opt,name=SessionId,proto3" json:"SessionId,omitempty"` // SessionId
	PbBody    []byte      `protobuf:"bytes,6,opt,name=PbBody,proto3" json:"PbBody,omitempty"`       // 数据内容
	MsgCtx    string      `protobuf:"bytes,7,opt,name=MsgCtx,proto3" json:"MsgCtx,omitempty"`       // 请求描述
	Check     string      `protobuf:"bytes,8,opt,name=check,proto3" json:"check,omitempty"`         // 接口鉴权校验
}

func (x *ReqBase) Reset() {
	*x = ReqBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBase) ProtoMessage() {}

func (x *ReqBase) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBase.ProtoReflect.Descriptor instead.
func (*ReqBase) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{2}
}

func (x *ReqBase) GetDev() *DeviceBase {
	if x != nil {
		return x.Dev
	}
	return nil
}

func (x *ReqBase) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqBase) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *ReqBase) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *ReqBase) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ReqBase) GetPbBody() []byte {
	if x != nil {
		return x.PbBody
	}
	return nil
}

func (x *ReqBase) GetMsgCtx() string {
	if x != nil {
		return x.MsgCtx
	}
	return ""
}

func (x *ReqBase) GetCheck() string {
	if x != nil {
		return x.Check
	}
	return ""
}

// 响应
type RetBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`              // 错误码
	UserId      uint64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`          // 用户id
	Cmd         uint32 `protobuf:"varint,3,opt,name=Cmd,proto3" json:"Cmd,omitempty"`                // 命令字
	MsgId       uint64 `protobuf:"varint,4,opt,name=MsgId,proto3" json:"MsgId,omitempty"`            // BussnissId，业务号，客户端发起，原样返回
	PbBody      []byte `protobuf:"bytes,6,opt,name=PbBody,proto3" json:"PbBody,omitempty"`           // 数据内容
	MsgCtx      string `protobuf:"bytes,7,opt,name=MsgCtx,proto3" json:"MsgCtx,omitempty"`           // 错误描述
	ServerTime  int64  `protobuf:"varint,8,opt,name=ServerTime,proto3" json:"ServerTime,omitempty"`  // 服务器时间
	DownloadUrl string `protobuf:"bytes,9,opt,name=DownloadUrl,proto3" json:"DownloadUrl,omitempty"` // 下载链接
}

func (x *RetBase) Reset() {
	*x = RetBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetBase) ProtoMessage() {}

func (x *RetBase) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetBase.ProtoReflect.Descriptor instead.
func (*RetBase) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{3}
}

func (x *RetBase) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RetBase) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RetBase) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *RetBase) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *RetBase) GetPbBody() []byte {
	if x != nil {
		return x.PbBody
	}
	return nil
}

func (x *RetBase) GetMsgCtx() string {
	if x != nil {
		return x.MsgCtx
	}
	return ""
}

func (x *RetBase) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *RetBase) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type ReqFolderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ReqFolderInfo) Reset() {
	*x = ReqFolderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFolderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFolderInfo) ProtoMessage() {}

func (x *ReqFolderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFolderInfo.ProtoReflect.Descriptor instead.
func (*ReqFolderInfo) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{4}
}

func (x *ReqFolderInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ModifyTime   int64               `protobuf:"varint,2,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`
	Size         int64               `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Children     []*FileInfo         `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	IsDir        bool                `protobuf:"varint,5,opt,name=isDir,proto3" json:"isDir,omitempty"`
	AbsolutePath string              `protobuf:"bytes,6,opt,name=absolutePath,proto3" json:"absolutePath,omitempty"`
	Formatter    *LogFormatterConfig `protobuf:"bytes,7,opt,name=formatter,proto3" json:"formatter,omitempty"` // 日志文件的解析格式
	Exist        bool                `protobuf:"varint,8,opt,name=exist,proto3" json:"exist,omitempty"`        // 主要本地使用, 本地是否存在该文件; 服务器返回时, 默认为false
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{5}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetModifyTime() int64 {
	if x != nil {
		return x.ModifyTime
	}
	return 0
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetChildren() []*FileInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *FileInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileInfo) GetAbsolutePath() string {
	if x != nil {
		return x.AbsolutePath
	}
	return ""
}

func (x *FileInfo) GetFormatter() *LogFormatterConfig {
	if x != nil {
		return x.Formatter
	}
	return nil
}

func (x *FileInfo) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误码
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误描述
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{6}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UtilRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"` // 返回码
	RetTime int64  `protobuf:"varint,2,opt,name=RetTime,proto3" json:"RetTime,omitempty"` // 后台操作时间; // 错误码
	RetTxt  string `protobuf:"bytes,3,opt,name=RetTxt,proto3" json:"RetTxt,omitempty"`    // 返回文案
}

func (x *UtilRet) Reset() {
	*x = UtilRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtilRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtilRet) ProtoMessage() {}

func (x *UtilRet) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtilRet.ProtoReflect.Descriptor instead.
func (*UtilRet) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{7}
}

func (x *UtilRet) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *UtilRet) GetRetTime() int64 {
	if x != nil {
		return x.RetTime
	}
	return 0
}

func (x *UtilRet) GetRetTxt() string {
	if x != nil {
		return x.RetTxt
	}
	return ""
}

type UtilReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UtilReq) Reset() {
	*x = UtilReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtilReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtilReq) ProtoMessage() {}

func (x *UtilReq) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtilReq.ProtoReflect.Descriptor instead.
func (*UtilReq) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{8}
}

type LogFormatterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFormatterRegExp string `protobuf:"bytes,1,opt,name=timeFormatterRegExp,proto3" json:"timeFormatterRegExp,omitempty"` // logger 时间字段的正则表达式.
	VerboseLineRegExp   string `protobuf:"bytes,2,opt,name=verboseLineRegExp,proto3" json:"verboseLineRegExp,omitempty"`
	DebugLineRegExp     string `protobuf:"bytes,3,opt,name=debugLineRegExp,proto3" json:"debugLineRegExp,omitempty"`
	InfoLineRegExp      string `protobuf:"bytes,4,opt,name=infoLineRegExp,proto3" json:"infoLineRegExp,omitempty"` // 日志每行开头的前缀格式(正则表达式)
	WarnLineRegExp      string `protobuf:"bytes,5,opt,name=warnLineRegExp,proto3" json:"warnLineRegExp,omitempty"`
	ErrorLineRegExp     string `protobuf:"bytes,6,opt,name=errorLineRegExp,proto3" json:"errorLineRegExp,omitempty"`
	WtfLineRegExp       string `protobuf:"bytes,7,opt,name=wtfLineRegExp,proto3" json:"wtfLineRegExp,omitempty"`
	NormalLineRegExp    string `protobuf:"bytes,8,opt,name=normalLineRegExp,proto3" json:"normalLineRegExp,omitempty"`
	VerboseColor        int64  `protobuf:"varint,9,opt,name=verboseColor,proto3" json:"verboseColor,omitempty"`
	DebugColor          int64  `protobuf:"varint,10,opt,name=debugColor,proto3" json:"debugColor,omitempty"`
	InfoColor           int64  `protobuf:"varint,11,opt,name=infoColor,proto3" json:"infoColor,omitempty"`
	WarnColor           int64  `protobuf:"varint,12,opt,name=warnColor,proto3" json:"warnColor,omitempty"`
	ErrorColor          int64  `protobuf:"varint,13,opt,name=errorColor,proto3" json:"errorColor,omitempty"`
	WtfColor            int64  `protobuf:"varint,14,opt,name=wtfColor,proto3" json:"wtfColor,omitempty"`
	NormalColor         int64  `protobuf:"varint,15,opt,name=normalColor,proto3" json:"normalColor,omitempty"`
	//  int32  splitType = 3; // split的位置, 0=每行开头, 1= 每行结尾
	Name       string `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"` // 样式名称
	ModifyTime int64  `protobuf:"varint,17,opt,name=modifyTime,proto3" json:"modifyTime,omitempty"`
}

func (x *LogFormatterConfig) Reset() {
	*x = LogFormatterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogFormatterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFormatterConfig) ProtoMessage() {}

func (x *LogFormatterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFormatterConfig.ProtoReflect.Descriptor instead.
func (*LogFormatterConfig) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{9}
}

func (x *LogFormatterConfig) GetTimeFormatterRegExp() string {
	if x != nil {
		return x.TimeFormatterRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetVerboseLineRegExp() string {
	if x != nil {
		return x.VerboseLineRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetDebugLineRegExp() string {
	if x != nil {
		return x.DebugLineRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetInfoLineRegExp() string {
	if x != nil {
		return x.InfoLineRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetWarnLineRegExp() string {
	if x != nil {
		return x.WarnLineRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetErrorLineRegExp() string {
	if x != nil {
		return x.ErrorLineRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetWtfLineRegExp() string {
	if x != nil {
		return x.WtfLineRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetNormalLineRegExp() string {
	if x != nil {
		return x.NormalLineRegExp
	}
	return ""
}

func (x *LogFormatterConfig) GetVerboseColor() int64 {
	if x != nil {
		return x.VerboseColor
	}
	return 0
}

func (x *LogFormatterConfig) GetDebugColor() int64 {
	if x != nil {
		return x.DebugColor
	}
	return 0
}

func (x *LogFormatterConfig) GetInfoColor() int64 {
	if x != nil {
		return x.InfoColor
	}
	return 0
}

func (x *LogFormatterConfig) GetWarnColor() int64 {
	if x != nil {
		return x.WarnColor
	}
	return 0
}

func (x *LogFormatterConfig) GetErrorColor() int64 {
	if x != nil {
		return x.ErrorColor
	}
	return 0
}

func (x *LogFormatterConfig) GetWtfColor() int64 {
	if x != nil {
		return x.WtfColor
	}
	return 0
}

func (x *LogFormatterConfig) GetNormalColor() int64 {
	if x != nil {
		return x.NormalColor
	}
	return 0
}

func (x *LogFormatterConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogFormatterConfig) GetModifyTime() int64 {
	if x != nil {
		return x.ModifyTime
	}
	return 0
}

type MonitorServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MonitorServer) Reset() {
	*x = MonitorServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorServer) ProtoMessage() {}

func (x *MonitorServer) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorServer.ProtoReflect.Descriptor instead.
func (*MonitorServer) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{10}
}

func (x *MonitorServer) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *MonitorServer) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MonitorServer) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MonitorServer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MonitorServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []*MonitorServer `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *MonitorServices) Reset() {
	*x = MonitorServices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorServices) ProtoMessage() {}

func (x *MonitorServices) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorServices.ProtoReflect.Descriptor instead.
func (*MonitorServices) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{11}
}

func (x *MonitorServices) GetServices() []*MonitorServer {
	if x != nil {
		return x.Services
	}
	return nil
}

var File_public_proto protoreflect.FileDescriptor

var file_public_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xa0, 0x05, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x48, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x49, 0x44, 0x46, 0x41, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x49, 0x49, 0x44, 0x46, 0x41, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x56, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x53, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x4f, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4e, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x31, 0x38, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x31, 0x38, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x44, 0x65, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x44, 0x65, 0x76, 0x54, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x53, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x65, 0x76, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x44, 0x65, 0x76, 0x73, 0x22, 0xd2,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x42, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x44, 0x65,
	0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x03, 0x44, 0x65, 0x76, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6d, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x62, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x50,
	0x62, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x43, 0x74, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x73, 0x67, 0x43, 0x74, 0x78, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x22, 0xcf, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43,
	0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x62, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x50, 0x62, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4d,
	0x73, 0x67, 0x43, 0x74, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x73, 0x67,
	0x43, 0x74, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x23, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x89, 0x02, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x44, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x55, 0x0a, 0x07, 0x55, 0x74, 0x69, 0x6c, 0x52, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x74, 0x54, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x74, 0x54, 0x78, 0x74, 0x22, 0x09, 0x0a, 0x07,
	0x55, 0x74, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x22, 0xfc, 0x04, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30,
	0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x45, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x69, 0x6d,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70,
	0x12, 0x2c, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x67, 0x45, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70,
	0x12, 0x26, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45,
	0x78, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x61, 0x72, 0x6e, 0x4c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45,
	0x78, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x74, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67,
	0x45, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x74, 0x66, 0x4c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x45, 0x78, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x67, 0x45, 0x78, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x62,
	0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x66,
	0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x6e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x61, 0x72, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x74, 0x66, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x74, 0x66, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x3b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_proto_rawDescOnce sync.Once
	file_public_proto_rawDescData = file_public_proto_rawDesc
)

func file_public_proto_rawDescGZIP() []byte {
	file_public_proto_rawDescOnce.Do(func() {
		file_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_proto_rawDescData)
	})
	return file_public_proto_rawDescData
}

var file_public_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_public_proto_goTypes = []interface{}{
	(*DeviceBase)(nil),         // 0: model.DeviceBase
	(*DeviceBaseS)(nil),        // 1: model.DeviceBaseS
	(*ReqBase)(nil),            // 2: model.ReqBase
	(*RetBase)(nil),            // 3: model.RetBase
	(*ReqFolderInfo)(nil),      // 4: model.ReqFolderInfo
	(*FileInfo)(nil),           // 5: model.FileInfo
	(*Error)(nil),              // 6: model.Error
	(*UtilRet)(nil),            // 7: model.UtilRet
	(*UtilReq)(nil),            // 8: model.UtilReq
	(*LogFormatterConfig)(nil), // 9: model.LogFormatterConfig
	(*MonitorServer)(nil),      // 10: model.MonitorServer
	(*MonitorServices)(nil),    // 11: model.MonitorServices
}
var file_public_proto_depIdxs = []int32{
	0,  // 0: model.DeviceBaseS.Devs:type_name -> model.DeviceBase
	0,  // 1: model.ReqBase.Dev:type_name -> model.DeviceBase
	5,  // 2: model.FileInfo.children:type_name -> model.FileInfo
	9,  // 3: model.FileInfo.formatter:type_name -> model.LogFormatterConfig
	10, // 4: model.MonitorServices.services:type_name -> model.MonitorServer
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_public_proto_init() }
func file_public_proto_init() {
	if File_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceBaseS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFolderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtilRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtilReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogFormatterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorServices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_public_proto_goTypes,
		DependencyIndexes: file_public_proto_depIdxs,
		MessageInfos:      file_public_proto_msgTypes,
	}.Build()
	File_public_proto = out.File
	file_public_proto_rawDesc = nil
	file_public_proto_goTypes = nil
	file_public_proto_depIdxs = nil
}
